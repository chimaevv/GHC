{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Desktop/virtual-fashion-assistant/src/MainDashboard.js\",\n  _s = $RefreshSig$();\n// src/MainDashboard.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport UserContext from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainDashboard() {\n  _s();\n  const {\n    userPreferences\n  } = useContext(UserContext);\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setLoading(true);\n      try {\n        // Debugging: Log the API key and URL\n        console.log('API Key:', process.env.REACT_APP_WEATHER_API_KEY);\n        const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n        // Ensure the API key is present\n        if (!apiKey) {\n          throw new Error('API key is missing. Please check your .env file.');\n        }\n        const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=London`);\n        const data = await response.json();\n\n        // Log the API response for debugging\n        console.log('API Response:', data);\n        if (data.error) {\n          // API returned an error\n          setError(data.error.message);\n          setWeatherData(null);\n        } else {\n          // Successful API response\n          setWeatherData(data);\n          setError(null);\n        }\n      } catch (err) {\n        // Network or other errors\n        console.error('Fetch error:', err);\n        setError(err.message);\n        setWeatherData(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Main Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.current.temp_f, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MainDashboard, \"3dq/5ZSamQpWXh8GKSrf4sQoPBI=\");\n_c = MainDashboard;\nexport default MainDashboard;\nvar _c;\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","jsxDEV","_jsxDEV","MainDashboard","_s","userPreferences","weatherData","setWeatherData","loading","setLoading","error","setError","fetchWeather","console","log","process","env","REACT_APP_WEATHER_API_KEY","apiKey","Error","response","fetch","data","json","message","err","children","fileName","_jsxFileName","lineNumber","columnNumber","current","temp_f","_c","$RefreshReg$"],"sources":["/Users/omar/Desktop/virtual-fashion-assistant/src/MainDashboard.js"],"sourcesContent":["// src/MainDashboard.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport UserContext from './UserContext';\n\nfunction MainDashboard() {\n  const { userPreferences } = useContext(UserContext);\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setLoading(true);\n      try {\n        // Debugging: Log the API key and URL\n        console.log('API Key:', process.env.REACT_APP_WEATHER_API_KEY);\n        const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n        // Ensure the API key is present\n        if (!apiKey) {\n          throw new Error('API key is missing. Please check your .env file.');\n        }\n\n        const response = await fetch(\n          `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=London`\n        );\n        const data = await response.json();\n\n        // Log the API response for debugging\n        console.log('API Response:', data);\n\n        if (data.error) {\n          // API returned an error\n          setError(data.error.message);\n          setWeatherData(null);\n        } else {\n          // Successful API response\n          setWeatherData(data);\n          setError(null);\n        }\n      } catch (err) {\n        // Network or other errors\n        console.error('Fetch error:', err);\n        setError(err.message);\n        setWeatherData(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeather();\n  }, []);\n\n  return (\n    <div>\n      <h1>Main Dashboard</h1>\n      {loading && <p>Loading weather data...</p>}\n      {error && <p>Error fetching data: {error}</p>}\n      {weatherData && (\n        <div>\n          <p>Temperature: {weatherData.current.temp_f}Â°F</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MainDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}