{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Desktop/virtual-fashion-assistant/src/MainDashboard.js\",\n  _s = $RefreshSig$();\n// src/MainDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainDashboard() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setLoading(true);\n      try {\n        // Debugging: Log the API key\n        console.log('API Key:', process.env.REACT_APP_WEATHER_API_KEY);\n        const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n        // Ensure the API key is present\n        if (!apiKey) {\n          throw new Error('API key is missing. Please check your .env file.');\n        }\n        const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=London`);\n        const data = await response.json();\n\n        // Log the API response for debugging\n        console.log('API Response:', data);\n        if (data.error) {\n          // API returned an error\n          setError(data.error.message);\n          setWeatherData(null);\n        } else {\n          // Successful API response\n          setWeatherData(data);\n          setError(null);\n        }\n      } catch (err) {\n        // Network or other errors\n        console.error('Fetch error:', err);\n        setError(err.message);\n        setWeatherData(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeather();\n  }, []);\n  const getOutfitRecommendation = () => {\n    if (!weatherData) return '';\n    const temp = weatherData.current.temp_f;\n    const condition = weatherData.current.condition.text.toLowerCase();\n    let recommendation = '';\n\n    // Simplified recommendation logic based on temperature\n    if (temp <= 32) {\n      recommendation = 'It\\'s freezing! Wear a heavy coat, scarf, and gloves.';\n    } else if (temp > 32 && temp <= 50) {\n      recommendation = 'It\\'s cold outside. Wear a coat and warm clothes.';\n    } else if (temp > 50 && temp <= 68) {\n      recommendation = 'It\\'s cool. A light jacket would be good.';\n    } else if (temp > 68 && temp <= 86) {\n      recommendation = 'It\\'s warm. Light clothing is recommended.';\n    } else {\n      recommendation = 'It\\'s hot! Stay cool with shorts and a t-shirt.';\n    }\n    return recommendation;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Main Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", weatherData.location.name, \", \", weatherData.location.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.current.temp_f, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Condition: \", weatherData.current.condition.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Outfit Recommendation: \", getOutfitRecommendation()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(MainDashboard, \"5D/vak42bx6E1PZA6agARYhQL9Q=\");\n_c = MainDashboard;\nexport default MainDashboard;\nvar _c;\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainDashboard","_s","weatherData","setWeatherData","loading","setLoading","error","setError","fetchWeather","console","log","process","env","REACT_APP_WEATHER_API_KEY","apiKey","Error","response","fetch","data","json","message","err","getOutfitRecommendation","temp","current","temp_f","condition","text","toLowerCase","recommendation","children","fileName","_jsxFileName","lineNumber","columnNumber","location","name","country","_c","$RefreshReg$"],"sources":["/Users/omar/Desktop/virtual-fashion-assistant/src/MainDashboard.js"],"sourcesContent":["// src/MainDashboard.js\nimport React, { useState, useEffect } from 'react';\n\nfunction MainDashboard() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setLoading(true);\n      try {\n        // Debugging: Log the API key\n        console.log('API Key:', process.env.REACT_APP_WEATHER_API_KEY);\n        const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n        // Ensure the API key is present\n        if (!apiKey) {\n          throw new Error('API key is missing. Please check your .env file.');\n        }\n\n        const response = await fetch(\n          `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=London`\n        );\n        const data = await response.json();\n\n        // Log the API response for debugging\n        console.log('API Response:', data);\n\n        if (data.error) {\n          // API returned an error\n          setError(data.error.message);\n          setWeatherData(null);\n        } else {\n          // Successful API response\n          setWeatherData(data);\n          setError(null);\n        }\n      } catch (err) {\n        // Network or other errors\n        console.error('Fetch error:', err);\n        setError(err.message);\n        setWeatherData(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeather();\n  }, []);\n\n  const getOutfitRecommendation = () => {\n    if (!weatherData) return '';\n\n    const temp = weatherData.current.temp_f;\n    const condition = weatherData.current.condition.text.toLowerCase();\n\n    let recommendation = '';\n\n    // Simplified recommendation logic based on temperature\n    if (temp <= 32) {\n      recommendation = 'It\\'s freezing! Wear a heavy coat, scarf, and gloves.';\n    } else if (temp > 32 && temp <= 50) {\n      recommendation = 'It\\'s cold outside. Wear a coat and warm clothes.';\n    } else if (temp > 50 && temp <= 68) {\n      recommendation = 'It\\'s cool. A light jacket would be good.';\n    } else if (temp > 68 && temp <= 86) {\n      recommendation = 'It\\'s warm. Light clothing is recommended.';\n    } else {\n      recommendation = 'It\\'s hot! Stay cool with shorts and a t-shirt.';\n    }\n\n    return recommendation;\n  };\n\n  return (\n    <div>\n      <h1>Main Dashboard</h1>\n      {loading && <p>Loading weather data...</p>}\n      {error && <p>Error fetching data: {error}</p>}\n      {weatherData && (\n        <div>\n          <p>\n            Location: {weatherData.location.name}, {weatherData.location.country}\n          </p>\n          <p>Temperature: {weatherData.current.temp_f}Â°F</p>\n          <p>Condition: {weatherData.current.condition.text}</p>\n          <p>Outfit Recommendation: {getOutfitRecommendation()}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MainDashboard;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF;QACAI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAAC;QAC9D,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAG,CAACC,yBAAyB;;QAEpD;QACA,IAAI,CAACC,MAAM,EAAE;UACX,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;QACrE;QAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kDAAkDH,MAAM,WAC1D,CAAC;QACD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACAV,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEQ,IAAI,CAAC;QAElC,IAAIA,IAAI,CAACZ,KAAK,EAAE;UACd;UACAC,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAACc,OAAO,CAAC;UAC5BjB,cAAc,CAAC,IAAI,CAAC;QACtB,CAAC,MAAM;UACL;UACAA,cAAc,CAACe,IAAI,CAAC;UACpBX,QAAQ,CAAC,IAAI,CAAC;QAChB;MACF,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZ;QACAZ,OAAO,CAACH,KAAK,CAAC,cAAc,EAAEe,GAAG,CAAC;QAClCd,QAAQ,CAACc,GAAG,CAACD,OAAO,CAAC;QACrBjB,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAI,CAACpB,WAAW,EAAE,OAAO,EAAE;IAE3B,MAAMqB,IAAI,GAAGrB,WAAW,CAACsB,OAAO,CAACC,MAAM;IACvC,MAAMC,SAAS,GAAGxB,WAAW,CAACsB,OAAO,CAACE,SAAS,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC;IAElE,IAAIC,cAAc,GAAG,EAAE;;IAEvB;IACA,IAAIN,IAAI,IAAI,EAAE,EAAE;MACdM,cAAc,GAAG,uDAAuD;IAC1E,CAAC,MAAM,IAAIN,IAAI,GAAG,EAAE,IAAIA,IAAI,IAAI,EAAE,EAAE;MAClCM,cAAc,GAAG,mDAAmD;IACtE,CAAC,MAAM,IAAIN,IAAI,GAAG,EAAE,IAAIA,IAAI,IAAI,EAAE,EAAE;MAClCM,cAAc,GAAG,2CAA2C;IAC9D,CAAC,MAAM,IAAIN,IAAI,GAAG,EAAE,IAAIA,IAAI,IAAI,EAAE,EAAE;MAClCM,cAAc,GAAG,4CAA4C;IAC/D,CAAC,MAAM;MACLA,cAAc,GAAG,iDAAiD;IACpE;IAEA,OAAOA,cAAc;EACvB,CAAC;EAED,oBACE9B,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtB9B,OAAO,iBAAIL,OAAA;MAAA+B,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACzC5B,KAAK,iBAAIP,OAAA;MAAA+B,QAAA,GAAG,uBAAqB,EAACxB,KAAK;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5ChC,WAAW,iBACVH,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,GAAG,YACS,EAAC5B,WAAW,CAACiC,QAAQ,CAACC,IAAI,EAAC,IAAE,EAAClC,WAAW,CAACiC,QAAQ,CAACE,OAAO;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACJnC,OAAA;QAAA+B,QAAA,GAAG,eAAa,EAAC5B,WAAW,CAACsB,OAAO,CAACC,MAAM,EAAC,OAAE;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClDnC,OAAA;QAAA+B,QAAA,GAAG,aAAW,EAAC5B,WAAW,CAACsB,OAAO,CAACE,SAAS,CAACC,IAAI;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDnC,OAAA;QAAA+B,QAAA,GAAG,yBAAuB,EAACR,uBAAuB,CAAC,CAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjC,EAAA,CAzFQD,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AA2FtB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}